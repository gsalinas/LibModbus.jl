# Values from modbus.h and unit-test.h files of libmodbus
#
if !((@isdefined _MODBUS_CONSTANTS_) && _MODBUS_CONSTANTS_)
    _MODBUS_CONSTANTS_ = true

    LM = LibModbus

    const MODBUS_BROADCAST_ADDRESS = 0

    const MODBUS_MAX_READ_BITS = 2000
    const MODBUS_MAX_WRITE_BITS = 1968
    const MODBUS_MAX_READ_REGISTERS = 125
    const MODBUS_MAX_WRITE_REGISTERS = 123

    # Commands

    const MODBUS_FC_READ_COILS               = 0x01
    const MODBUS_FC_READ_DISCRETE_INPUTS     = 0x02
    const MODBUS_FC_READ_HOLDING_REGISTERS   = 0x03
    const MODBUS_FC_READ_INPUT_REGISTERS     = 0x04
    const MODBUS_FC_WRITE_SINGLE_COIL        = 0x05
    const MODBUS_FC_WRITE_SINGLE_REGISTER    = 0x06
    const MODBUS_FC_READ_EXCEPTION_STATUS    = 0x07
    const MODBUS_FC_WRITE_MULTIPLE_COILS     = 0x0F
    const MODBUS_FC_WRITE_MULTIPLE_REGISTERS = 0x10
    const MODBUS_FC_REPORT_SLAVE_ID          = 0x11
    const MODBUS_FC_MASK_WRITE_REGISTER      = 0x16
    const MODBUS_FC_WRITE_AND_READ_REGISTERS = 0x17

    # Protocol exceptions

    const MODBUS_ENOBASE =  112345678

    const EMBXILFUN = (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_ILLEGAL_FUNCTION))
    const EMBXILADD = (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_ILLEGAL_DATA_ADDRESS))
    const EMBXILVAL = (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_ILLEGAL_DATA_VALUE))
    const EMBXSFAIL = (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_SLAVE_OR_SERVER_FAILURE))
    const EMBXACK =   (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_ACKNOWLEDGE))
    const EMBXSBUSY = (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_SLAVE_OR_SERVER_BUSY))
    const EMBXNACK =  (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_NEGATIVE_ACKNOWLEDGE))
    const EMBXMEMPAR = (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_MEMORY_PARITY))
    const EMBXGPATH = (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_GATEWAY_PATH))
    const EMBXGTAR =  (MODBUS_ENOBASE + UInt8(LM.MODBUS_EXCEPTION_GATEWAY_TARGET))

    # Native libmodbus error codes
    const EMBBADCRC =   (EMBXGTAR + 1)
    const EMBBADDATA =  (EMBXGTAR + 2)
    const EMBBADEXC =   (EMBXGTAR + 3)
    const EMBUNKEXC =   (EMBXGTAR + 4)
    const EMBMDATA =    (EMBXGTAR + 5)
    const EMBBADSLAVE =  (EMBXGTAR + 6)

    # Values from tests/unit-test-server.h file of libmodbus
    const UT_BITS_ADDRESS = 0x130
    const UT_BITS_NB = 0x25
    const UT_BITS_TAB = [ 0xCD, 0x6B, 0xB2, 0x0E, 0x1B ]

    const UT_INPUT_BITS_ADDRESS = 0x1C4
    const UT_INPUT_BITS_NB = 0x16
    const UT_INPUT_BITS_TAB = [ 0xAC, 0xDB, 0x35 ]

    const UT_REGISTERS_ADDRESS = 0x160
    const UT_REGISTERS_NB = 0x3
    const UT_REGISTERS_NB_MAX = 0x20
    const UT_REGISTERS_TAB = [ 0x022B, 0x0001, 0x0064 ]

    const UT_INPUT_REGISTERS_ADDRESS = 0x108
    const UT_INPUT_REGISTERS_NB = 0x1
    const UT_INPUT_REGISTERS_TAB = [ 0x000A ]

    const INVALID_SERVER_ID = 18
    const UT_REGISTERS_ADDRESS_SPECIAL = 0x0170
    const UT_REGISTERS_ADDRESS_INVALID_TID_OR_SLAVE = 0x0171
    const UT_REGISTERS_ADDRESS_SLEEP_500_MS = 0x0172
    const UT_REGISTERS_ADDRESS_BYTE_SLEEP_5_MS = 0x0173
    const UT_REGISTERS_NB_SPECIAL = 0x0002

    const NB_REPORT_SLAVE_ID = 10
end
nothing
